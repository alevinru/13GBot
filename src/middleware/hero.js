import log from 'sistemium-telegram/services/log';
import findIndex from 'lodash/findIndex';
import filter from 'lodash/filter';
// import trim from 'lodash/trim';

const { debug, error } = log('mw:hero');

const equipRe = /^üéΩ–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞/;
const itemRe = /‚öî|üõ°/;

export default async function (ctx, next) {

  const { message: { from, text, forward_date: date } } = ctx;

  const userId = from.id;
  const ts = new Date(date * 1000);

  const items = text.split('\n');

  const equipStart = findIndex(items, item => equipRe.test(item));

  debug(userId, equipStart, ts);

  if (!equipStart) {
    await next();
    return;
  }

  try {

    const equipEnd = findIndex(items, '', equipStart + 1);

    let equip = filter(items.slice(equipStart + 1, equipEnd - 2), item => itemRe.test(item));

    equip = equip.map(item => {
      const match = item.match(/^(‚ö°\+\d+)?[ ]?([^‚öîüõ°]+)[ ](\+\d+‚öî)?[ ]?(\+\d+üõ°)?/);
      const [, enchanted, name, atk, def] = match;
      return JSON.stringify({
        name,
        enchanted: enchanted && enchanted.replace(/[^0-9]/g, ''),
        atk: atk && atk.replace(/[‚öî+]/g, ''),
        def: def && def.replace(/[üõ°+]/g, ''),
      });
    });

    const response = [
      '–Ø —Ç–∞–∫ –ø–æ–Ω—è–ª –≤–æ—Ç —à–º–æ—Ç:',
      '\n\n',
      equip.join('\n'),
      '\n\n',
      '–ù–æ —è –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–ø–æ–º–∏–Ω–∞—é –∏–∑ —ç—Ç–æ–≥–æ –ø–æ–∫–∞, —Ç–∞–∫ —á—Ç–æ –ø–æ—Ç–æ–º –ø—Ä–∏—à–ª–∏ —Å–Ω–æ–≤–∞ –∫–∞–∫-–Ω–∏–±—É–¥—å!',
    ];

    ctx.replyHTML(response);

  } catch (e) {
    error(e.message);
  }

}
